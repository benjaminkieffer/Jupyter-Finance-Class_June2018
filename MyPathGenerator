from __future__ import division
import numpy as np
import matplotlib.pyplot as plt
from numpy.linalg import cholesky
from scipy.stats import norm
import pandas as pd

def gen_paths(S0, r, sigma, T, M, I):
    dt = float(T) / M
    paths = np.zeros((M + 1, I), np.float64)
    paths[0] = S0
    for t in range(1, M + 1):
        rand = np.random.standard_normal(I)
        paths[t] = paths[t - 1] * np.exp((r - 0.5 * sigma ** 2) * dt +
                                         sigma * np.sqrt(dt) * rand)
    return paths

S0 = 100.
K = 100.
r = 0.000001
sigma = 0.20
T = 1
N = 252

deltat = T / N
i = 1000
discount_factor = np.exp(-r * T)


paths = gen_paths(S0, r, sigma, T, N, i)

pd.DataFrame(paths).plot(legend=False)


